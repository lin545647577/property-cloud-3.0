<template>
  <div class="normalForm">
    <el-form
      v-loading="loading"
      label-position="right"
      label-width="150px"
      :model="form"
      :rules="rules"
      ref="ruleForm"
    >
      <el-form-item label="仪表：">
        <el-input v-model="form.name" disabled></el-input>
      </el-form-item>
      <el-form-item label="时间：">
        <el-input v-model="form.month" disabled></el-input>
      </el-form-item>
      <el-form-item label="单价：" prop="amount">
        <el-input v-model="form.amount" :disabled="checkInfo"></el-input>
      </el-form-item>
      <el-form-item label="本月读数：" prop="thisReading">
        <el-input v-model="form.thisReading" :disabled="checkInfo"></el-input>
      </el-form-item>
    </el-form>
    <div class="modal-btn">
      <el-button size="small" @click="hiddenModal">取消</el-button>
      <el-button
        size="small"
        type="primary"
        class="control-btn"
        :style="{ 'background-color': themeColor }"
        @click="submitForm('ruleForm')"
        >确认
      </el-button>
    </div>

    <li-modal style="min-width: 1200px" ref="buildingModal" />
  </div>
</template>

<script>
import {
  queryMeterReading,
  editMeterReading,
  insertMeterReading,
} from "@/api/device.js";

export default {
  name: "editModal",
  props: {
    params: {
      type: Object,
      required: true,
    },
  },
  data() {
    return {
      loading: false,
      checkInfo: false,
      form: {},
      rules: {
        thisReading: [
          {
            required: true,
            message: "请输入",
            trigger: "blur",
          },
        ],
        amount: [
          {
            required: true,
            message: "请输入",
            trigger: "blur",
          },
        ],
      },
    };
  },
  methods: {
    initModel() {
      this.$refs["buildingModal"].show({
        view: "property/common/buildingModal.vue",
        params: { id: "123" },
        title: "楼宇列表",
        center: true,
        top: "5vh",
        hideSubmitButton: true,
        hideCancelButton: true,
        submit: this.getCallData,
      });
    },

    getCallData(data) {
      console.log(data.multipleSelection[0]);
      this.form.buildingName = data.multipleSelection[0].name;
      this.form.referenceBuildingId = data.multipleSelection[0].id;
      this.$refs["buildingModal"].hide();
    },

    hiddenModal() {
      // console.log(this.form)
      this.$emit("modal-cancel");
    },

    submitForm(formName) {
      this.$refs[formName].validate((valid) => {
        if (valid) {
          if (!this.checkInfo) {
            if (this.form.id) {
              this.editInfo();
            } else {
              this.insertInfo();
            }
          } else {
            this.$emit("modal-submit");
          }
        } else {
          return false;
        }
      });
    },
    insertInfo() {
      insertMeterReading(this.form).then((res) => {
        this.$message({
          message: "操作成功",
          center: true,
          type: "success",
        });
        this.$emit("modal-submit");
      });
    },
    editInfo() {
      editMeterReading(this.form).then((res) => {
        this.$message({
          message: "操作成功",
          center: true,
          type: "success",
        });
        this.$emit("modal-submit");
      });
    },
    initForm(row) {
      this.loading = true;
      this.form = {
        id: row.id,
        name: row.name,
        month: row.month,
        thisReading: row.thisReading,
        amount: row.amount,
        referenceMeterId: row.referenceMeterId,
      };
      this.loading = false;
    },
  },
  mounted() {
    this.checkInfo = this.params.checkInfo;
    if (this.params.row) {
      // console.log(this.params.row);
      this.initForm(this.params.row);
    }
  },
  computed: {
    themeColor() {
      return this.$store.state.app.themeColor;
    },
  },
};
</script>

<style scoped></style>
