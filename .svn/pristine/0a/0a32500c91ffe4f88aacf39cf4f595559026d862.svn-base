<template>
  <div>
    <div class="search-box">
      <el-row :gutter="10" class="vertical-middle">
        <el-col :span="2" class="text-right vertical-middle">
          <div class="grid-content el-line-height">姓名：</div>
        </el-col>
        <el-col :span="3" class="vertical-middle">
          <div class="grid-content">
            <el-input v-model="searchName" placeholder="请输入内容"></el-input>
          </div>
        </el-col>

        <el-col :span="2" class="text-right vertical-middle">
          <div class="grid-content el-line-height">性别：</div>
        </el-col>
        <el-col :span="3" class="vertical-middle">
          <div class="grid-content">
            <el-select
              v-model="searchGender"
              placeholder="请选择"
              @change="queryList((currentPage = 1))"
            >
              <el-option label="全部" value=""></el-option>
              <el-option
                v-for="item in gender"
                :key="item.id"
                :label="item.name"
                :value="item.id"
              ></el-option>
            </el-select>
          </div>
        </el-col>

        <el-col :span="2" class="text-right vertical-middle">
          <div class="grid-content el-line-height">证件号：</div>
        </el-col>
        <el-col :span="3" class="vertical-middle">
          <div class="grid-content">
            <el-input
              v-model="searchCertNo"
              placeholder="请输入内容"
            ></el-input>
          </div>
        </el-col>

        <el-col :span="3" class="vertical-middle">
          <div class="grid-content text-right">
            <el-button
              size="small"
              class="search-btn"
              type="primary"
              @click="queryList((currentPage = 1))"
              >搜索
            </el-button>
          </div>
        </el-col>
      </el-row>
    </div>
    <table-header-btn
      :insertBtn="true"
      :exportBtn="true"
      :deleteBtn="true"
      @handleInsert="handleInsert(false)"
      @handleExport="handleExport"
      @handleDeletes="handleDeletes"
    ></table-header-btn>
    <el-table
      border
      ref="multipleTable"
      :data="tableData"
      tooltip-effect="dark"
      style="width: 100%"
      @selection-change="handleSelectionChange"
    >
      <el-table-column type="selection"></el-table-column>
      <el-table-column label="序号" prop="index" width="60"></el-table-column>
      <el-table-column prop="name" label="姓名" show-overflow-tooltip>
      </el-table-column>
      <el-table-column
        prop="gender"
        label="性别"
        width="60"
        show-overflow-tooltip
      >
        <template slot-scope="scope"
          >{{ findGender(scope.row.gender) }}
        </template>
      </el-table-column>
      <el-table-column prop="phone" label="手机" show-overflow-tooltip>
        <!-- <template slot-scope="scope" v-if="scope.row.nation">
          {{findNation(scope.row.nation)}}
        </template> -->
      </el-table-column>
      <el-table-column prop="residenceName" label="物业" show-overflow-tooltip>
      </el-table-column>
      <el-table-column prop="certType" label="证件类型" show-overflow-tooltip>
        <template slot-scope="scope" v-if="scope.row.certType">
          {{ findCertType(scope.row.certType) }}
        </template>
      </el-table-column>
      <el-table-column prop="certNo" label="证件号码" show-overflow-tooltip>
      </el-table-column>
      <!-- <el-table-column prop="born" label="出生" width="100" show-overflow-tooltip>
      </el-table-column> -->
      <el-table-column prop="address" label="住址" show-overflow-tooltip>
      </el-table-column>
      <!-- <el-table-column prop="certExpireTime" label="证件有效期" width="100" show-overflow-tooltip>
      </el-table-column> -->
      <!--      <el-table-column prop="certAddr" label="签发机关" show-overflow-tooltip>-->
      <!--      </el-table-column>-->
      <!-- <el-table-column prop="register" label="户籍" show-overflow-tooltip>
      </el-table-column> -->
      <el-table-column label="人脸照片" show-overflow-tooltip>
        <template slot-scope="scope">
          {{ scope.row.fileUrl ? "已登记照片" : "未登记" }}
        </template>
      </el-table-column>
      <el-table-column label="操作" width="120">
        <template slot-scope="scope">
          <el-button
            size="mini"
            type="text"
            @click="handleCheck(true, scope.row)"
            >查看
          </el-button>
          <el-button
            size="mini"
            type="text"
            @click="handleEdit(false, scope.row)"
            >编辑
          </el-button>
          <el-button size="mini" type="text" @click="handleDelete(scope.row.id)"
            >删除
          </el-button>
        </template>
      </el-table-column>
    </el-table>

    <div class="block pagination-center">
      <el-pagination
        @size-change="handleSizeChange"
        @current-change="handleCurrentChange"
        :current-page="currentPage"
        :page-sizes="pageSizes"
        :page-size="pageSize"
        layout="total, sizes, prev, pager, next, jumper"
        :total="total"
      >
      </el-pagination>
    </div>
    <li-modal style="min-width: 1200px" ref="editModal" />
  </div>
</template>

<script>
import {
  queryMemberList,
  exportMemberList,
  deleteMember,
} from "@/api/member.js";
import { resolveBlob } from "@/utils/util.js";
import tableHeaderBtn from "@/components/tableHeaderBtn";

export default {
  name: "member",
  components: {
    "table-header-btn": tableHeaderBtn,
  },
  data() {
    return {
      searchCertNo: "",
      searchName: "",
      searchGender: "",
      tableData: [],
      multipleSelection: [],
      currentPage: 1,
      pageSizes: [10, 20, 50, 100],
      pageSize: 10,
      total: 0,
      fullscreenLoading: false,
      ids: "",

      gender: [
        {
          id: "0",
          name: "未知",
        },
        {
          id: "1",
          name: "男",
        },
        {
          id: "2",
          name: "女",
        },
      ],
      certType: [
        {
          id: 1,
          name: "身份证",
        },
        {
          id: 2,
          name: "护照",
        },
        {
          id: 3,
          name: "户口簿",
        },
        {
          id: 4,
          name: "驾驶证",
        },
        {
          id: 20,
          name: "其他",
        },
      ],
    };
  },
  methods: {
    //图片
    handleAvatarSuccess(res, file) {
      this.avatarUrl = URL.createObjectURL(file.raw);
      ////console.log(res);
      this.form.fileId = res.data.id;
    },
    findNation(nid) {
      let res = this.nation.find((item) => {
        return item.dictValue == nid;
      });
      return res ? res.dictLabel : "";
    },
    findCertType(cid) {
      let res = this.certType.find((item) => {
        return item.id == cid;
      });
      return res ? res.name : "";
    },
    findGender(gid) {
      let res = this.gender.find((item) => {
        return item.id == gid;
      });
      return res ? res.name : "";
    },
    /**
     * 导出信息
     */
    handleExport() {
      this.$confirm("是否导出全部数据?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning",
      })
        .then(() => {
          this.fullscreenLoading = true;
          exportMemberList({
            name: this.searchName,
          }).then((res) => {
            resolveBlob(res, res.type);
            this.$message({
              message: "导出成功",
              center: true,
              type: "success",
            });
            this.fullscreenLoading = false;
          });
        })
        .catch(() => {
          this.$message({
            type: "info",
            message: "已取消",
          });
        });
    },
    //表格选择
    handleSelectionChange(val) {
      this.multipleSelection = val;
      let tempArr = [];
      for (let index in val) {
        tempArr.push(val[index].id);
      }
      this.ids = tempArr.toString();
      // console.log("表格选择",this.ids);
    },
    /**
     * 删除
     * @param {String} ids
     */
    handleDeletes() {
      // console.log("ids:", this.ids);
      if (!this.ids) {
        this.$message({
          message: "请勾选内容",
          center: true,
          type: "warning",
        });
        return;
      }
      this.handleDelete(this.ids);
    },

    /**
     * 查看操作
     * @param {boolean} checkInfo
     * @param {Object} row
     */
    handleCheck(checkInfo, row) {
      // console.log(row);
      this.$refs["editModal"].show({
        view: "member/member/editModal.vue",
        params: { checkInfo: checkInfo, id: row.id },
        title: "查看人员",
        center: true,
        top: "5vh",
        hideSubmitButton: true,
        hideCancelButton: true,
      });
    },

    /**
     *modal回调
     */
    modalCallFunction() {
      this.queryList(this.currentPage);
      this.$refs["editModal"].hide();
    },

    /**
     * 编辑操作
     * @param {boolean} checkInfo
     * @param {Object} row
     */
    handleEdit(checkInfo, row) {
      // console.log(index, row);
      this.$refs["editModal"].show({
        view: "member/member/editModal.vue",
        params: { checkInfo: checkInfo, id: row.id },
        title: "编辑人员",
        center: true,
        top: "5vh",
        hideSubmitButton: true,
        hideCancelButton: true,
        submit: this.modalCallFunction,
      });
    },

    /**
     * 新增操作
     * @param {boolean} checkInfo
     */
    handleInsert(checkInfo) {
      // console.log(index, row);
      this.$refs["editModal"].show({
        view: "member/member/editModal.vue",
        params: { checkInfo: checkInfo },
        title: "新增人员",
        center: true,
        top: "5vh",
        hideSubmitButton: true,
        hideCancelButton: true,
        submit: this.modalCallFunction,
      });
    },
    /**
     * 删除
     * @param index
     * @param {Object} row
     */
    handleDelete(ids) {
      this.$confirm("确认删除?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning",
      })
        .then(() => {
          deleteMember(ids).then((res) => {
            this.$message({
              message: "操作成功",
              center: true,
              type: "success",
            });
            this.queryList(this.currentPage);
          });
        })
        .catch(() => {
          this.$message({
            type: "info",
            message: "已取消删除",
          });
        });
    },

    //每页显示条数
    handleSizeChange(val) {
      // console.log(`每页 ${val} 条`);
      this.pageSize = val;
      this.queryList((this.currentPage = 1));
    },

    // 分页
    handleCurrentChange(val) {
      this.queryList((this.currentPage = val));
    },

    queryList(currentPage) {
      // console.log(this.searchName);
      let that = this;
      queryMemberList({
        pageNum: currentPage,
        pageSize: this.pageSize,
        name: this.searchName,
        gender: this.searchGender,
        certNo: this.searchCertNo,
      }).then((res) => {
        // console.log(res);
        for (let index in res.rows) {
          res.rows[index].index =
            parseInt(index) + 1 + (that.currentPage - 1) * that.pageSize;
        }
        that.tableData = res.rows;
        that.total = res.total;
      });
    },
  },
  mounted() {
    this.queryList(this.currentPage);
  },
};
</script>

<style scoped></style>
