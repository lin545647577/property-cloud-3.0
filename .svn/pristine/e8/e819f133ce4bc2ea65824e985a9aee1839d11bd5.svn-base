<template>
  <div class="normalForm">
    <el-form
      v-loading="loading"
      label-position="right"
      label-width="150px"
      :model="form"
      :rules="rules"
      ref="ruleForm"
    >
      <el-form-item label="车牌号：" prop="carNo">
        <el-input v-model="form.carNo" :disabled="checkInfo"></el-input>
      </el-form-item>
      <el-form-item label="所属业主：" prop="ownerName">
        <el-input
          :value="form.ownerName"
          @focus="handleOwnerModal"
          :disabled="checkInfo"
        ></el-input>
      </el-form-item>
      <el-form-item label="车主：">
        <el-input v-model="form.name" :disabled="checkInfo"></el-input>
      </el-form-item>
      <el-form-item label="状态：">
        <el-select
          v-model="form.status"
          placeholder="请选择状态"
          style="width: 100%"
          :disabled="checkInfo"
        >
          <el-option
            v-for="item in states"
            :key="item.id"
            :label="item.name"
            :value="item.id"
          ></el-option>
        </el-select>
      </el-form-item>
      <el-form-item label="关联车位：" prop="parkingName">
        <el-input
          :value="form.parkingName"
          @focus="handleParkingModal"
          :disabled="checkInfo"
        ></el-input>
      </el-form-item>
      <el-form-item label="开始时间：">
        <el-date-picker
          v-model="form.startTime"
          style="width: 100%"
          type="datetime"
          placeholder="选择日期时间"
          :disabled="checkInfo"
        >
        </el-date-picker>
      </el-form-item>
      <el-form-item label="结束时间：">
        <el-date-picker
          v-model="form.endTime"
          style="width: 100%"
          type="datetime"
          placeholder="选择日期时间"
          :disabled="checkInfo"
        >
        </el-date-picker>
      </el-form-item>
      <el-form-item label="关联车场：" prop="carParkIds">
        <el-select
          v-model="form.carParkIds"
          placeholder="请选择车场"
          style="width: 100%"
          :disabled="checkInfo"
          @change="getCarType"
        >
          <el-option
            v-for="(item, index) in depotList"
            :key="index"
            :label="item.name"
            :value="item.id"
          ></el-option>
        </el-select>
      </el-form-item>
      <el-form-item label="车辆类型：" prop="referenceTypeId">
        <el-select
          v-model="form.referenceTypeId"
          placeholder="请选择车辆类型"
          style="width: 100%"
          :disabled="checkInfo"
        >
          <el-option
            v-for="item in carTypeChoose"
            :key="item.id"
            :label="item.name"
            :value="item.id"
          ></el-option>
        </el-select>
      </el-form-item>
      <el-form-item label="手机号：">
        <el-input v-model="form.phone" :disabled="checkInfo"></el-input>
      </el-form-item>
      <el-form-item label="备注：">
        <el-input v-model="form.remarks" :disabled="checkInfo"></el-input>
      </el-form-item>
    </el-form>
    <div class="modal-btn">
      <el-button size="small" @click="hiddenModal">取消</el-button>
      <el-button
        size="small"
        type="primary"
        class="control-btn"
        :style="{ 'background-color': themeColor }"
        @click="submitForm('ruleForm')"
        >确认
      </el-button>
    </div>
    <li-modal ref="chooseModal" style="min-width: 1200px" />
  </div>
</template>
<script>
import {
  queryCarDefinition,
  editCarDefinition,
  insertCarDefinition,
  queryCarParkDefinitionList,
  queryCarParkTypeConfigList,
} from "@/api/parking.js";

export default {
  name: "editModal",
  props: {
    params: {
      type: Object,
      required: true,
    },
  },
  data() {
    return {
      loading: false,
      checkInfo: false,
      form: {
        referenceMemberId: "",
        ownerName: "",
        parkingName: "",
        referenceParkingId: "",
      },
      rules: {
        carNo: [
          {
            required: true,
            message: "请输入",
            trigger: "blur",
          },
        ],
        ownerName: [
          {
            required: true,
            message: "请选择",
            trigger: "change",
          },
        ],
        parkingName: [
          {
            required: true,
            message: "请选择",
            trigger: "change",
          },
        ],
        carParkIds: [
          {
            required: true,
            message: "请选择",
            trigger: "change",
          },
        ],
        referenceTypeId: [
          {
            required: true,
            message: "请选择",
            trigger: "change",
          },
        ],
      },
      carTypeChoose: [], //对话框的

      depotList: [], //车场列表
      ids: [], //选中车辆id

      states: [
        {
          id: "0",
          name: "异常",
        },
        {
          id: "1",
          name: "正常",
        },
      ],
    };
  },
  methods: {
    getCarType(val) {
      console.log(val);
      this.initCarTypeChoose(val);
    },
    initCarTypeChoose(id) {
      queryCarParkTypeConfigList({
        referenceCarParkId: id.toString(),
      }).then((res) => {
        // console.log(res)
        this.carTypeChoose = res.rows;
        //console.log("cartypeChoose:", that.carTypeChoose);
      });
    },
    initCarType() {
      // var that = this;
      // getCarTypeList({}, res => {
      //   that.carTypeChoose = that.carType = res.data.rows;
      //   //console.log("cartype:", that.carType);
      //   //console.log("cartype:", that.carTypeChoose);
      // })
    },
    // 初始化车场列表
    initDepotList() {
      queryCarParkDefinitionList({}).then((res) => {
        this.depotList = res.rows;
      });
    },

    handleParkingModal() {
      let that = this;
      this.$refs["chooseModal"].show({
        view: "parking/common/parkingModal.vue",
        params: {},
        title: "车位列表",
        center: true,
        top: "5vh",
        hideSubmitButton: true,
        hideCancelButton: true,
        submit: (data) => {
          console.log("车位列表:", data);
          // console.log(data.multipleSelection[0].name);
          this.form.parkingName = data.multipleSelection[0].parkingId;
          this.form.referenceParkingId = data.multipleSelection[0].id;
          this.$refs["chooseModal"].hide();
        },
      });
    },

    handleOwnerModal() {
      let that = this;
      this.$refs["chooseModal"].show({
        view: "member/common/ownerModal.vue",
        params: {},
        title: "业主列表",
        center: true,
        top: "5vh",
        hideSubmitButton: true,
        hideCancelButton: true,
        submit: (data) => {
          // console.log("owner",data.multipleSelection[0]);
          that.form.ownerName = data.multipleSelection[0].memberName;
          that.form.referenceMemberId =
            data.multipleSelection[0].referenceMemberId;
          that.$refs["chooseModal"].hide();
        },
      });
    },

    handleResidenceModal() {
      this.$refs["chooseModal"].show({
        view: "property/common/residenceModal.vue",
        params: {},
        title: "物业列表",
        center: true,
        top: "5vh",
        hideSubmitButton: true,
        hideCancelButton: true,
        submit: this.getCallData,
      });
    },

    getCallData(data) {
      console.log(data.multipleSelection[0].name);
      this.form.residenceName = data.multipleSelection[0].name;
      this.form.referenceResidenceId = data.multipleSelection[0].id;
      this.$refs["chooseModal"].hide();
    },

    hiddenModal() {
      // console.log(this.form)
      this.$emit("modal-cancel");
    },
    /**
     * 初始化车位类型
     * @param {String} id 楼层id
     */
    queryInfo(id) {
      this.loading = true;
      queryCarDefinition(id).then((res) => {
        if (res.carParkIds) {
          this.initCarTypeChoose(res.carParkIds);
        }
        this.form = {
          id: res.id,
          carNo: res.carNo,
          ownerName: res.ownerName,
          name: res.name,
          status: res.status,
          referenceParkingId: res.referenceParkingId,
          parkingName: res.parkingName,
          startTime: res.startTime,
          endTime: res.endTime,
          recordId: res.recordId,
          phone: res.phone,
          remarks: res.remarks,
          carParkIds: parseInt(res.carParkIds),
          referenceTypeId: parseInt(res.referenceTypeId),
        };
        this.loading = false;
      });
    },

    submitForm(formName) {
      this.$refs[formName].validate((valid) => {
        if (valid) {
          if (!this.checkInfo) {
            if (this.form.id) {
              this.editInfo();
            } else {
              this.insertInfo();
            }
          } else {
            this.$emit("modal-submit");
          }
        } else {
          return false;
        }
      });
    },
    insertInfo() {
      this.form.carParkIds = this.form.carParkIds.toString();
      insertCarDefinition(this.form).then((res) => {
        this.$message({
          message: "操作成功",
          center: true,
          type: "success",
        });
        this.$emit("modal-submit");
      });
    },
    editInfo() {
      this.form.carParkIds = this.form.carParkIds.toString();
      editCarDefinition(this.form).then((res) => {
        this.$message({
          message: "操作成功",
          center: true,
          type: "success",
        });
        this.$emit("modal-submit");
      });
    },
  },
  mounted() {
    this.checkInfo = this.params.checkInfo;
    if (this.params.id) {
      this.queryInfo(this.params.id);
    }
    this.initDepotList();
    this.initCarType();
  },
  computed: {
    themeColor() {
      return this.$store.state.app.themeColor;
    },
  },
};
</script>

<style scoped></style>
