<template>
  <div class="normalForm">
    <el-form
      v-loading="loading"
      label-position="right"
      label-width="150px"
      :model="form"
      :rules="rules"
      ref="ruleForm"
    >
      <el-form-item label="标题" prop="title">
        <!-- <el-input v-model="form.content" :disabled="checkInfo"></el-input> -->
        <el-input
          :disabled="checkInfo"
          placeholder="请输入"
          v-model="form.title"
        >
        </el-input>
      </el-form-item>
      <el-form-item label="解答" prop="answer">
        <li-rich-text v-model="form.answer" />
      </el-form-item>
      <el-form-item label="附件：">
        <li-attachment v-model="form.urls" :readonly="checkInfo" />
      </el-form-item>
    </el-form>
    <div class="modal-btn">
      <el-button size="small" @click="hiddenModal">取消</el-button>
      <el-button
        size="small"
        type="primary"
        class="control-btn"
        :style="{ 'background-color': themeColor }"
        @click="submitForm('ruleForm')"
        >确认
      </el-button>
    </div>
    <li-modal ref="chooseModal" style="min-width: 1200px" />
  </div>
</template>
<script>
import { queryAnswer, editAnswer, insertAnswer } from "@/api/order.js";
import { dateFormat } from "@/utils/util.js";

export default {
  name: "editModal",
  props: {
    params: {
      type: Object,
      required: true,
    },
  },
  data() {
    return {
      checkInfo: false,
      form: {},
      rules: {
        title: [
          {
            required: true,
            message: "请输入",
            trigger: "blur",
          },
        ],
        answer: [
          {
            required: true,
            message: "请输入",
            trigger: "blur",
          },
        ],
      },
      loading: false,
    };
  },
  methods: {
    hiddenModal() {
      // console.log(this.form)
      this.$emit("modal-cancel");
    },
    /**
     * 初始化
     * @param {String} id 楼层id
     */
    queryInfo(id) {
      this.loading = true;
      queryAnswer(id).then((res) => {
        this.form = res;
        this.form.urls = this.form.urls ? this.form.urls : "[]";
        this.loading = false;
      });
    },

    submitForm(formName) {
      // this.form.updateTime = dateFormat(
      //   "yyyy-MM-dd hh:mm:ss",
      //   new Date(this.form.updateTime)
      // );

      this.$refs[formName].validate((valid) => {
        if (valid) {
          if (!this.checkInfo) {
            if (this.form.id) {
              this.editInfo();
            } else {
              this.insertInfo();
            }
          } else {
            this.$emit("modal-submit");
          }
        } else {
          this.$message({
            message: "提交表单失败",
            center: true,
            type: "error",
          });
          return false;
        }
      });
    },
    insertInfo() {
      insertAnswer(this.form).then((res) => {
        this.$message({
          message: "操作成功",
          center: true,
          type: "success",
        });
        this.$emit("modal-submit");
      });
    },
    editInfo() {
      editAnswer(this.form).then((res) => {
        this.$message({
          message: "操作成功",
          center: true,
          type: "success",
        });
        this.$emit("modal-submit");
      });
    },
  },
  mounted() {
    this.checkInfo = this.params.checkInfo;
    if (this.params.id) {
      this.queryInfo(this.params.id);
    }
  },
  computed: {
    themeColor() {
      return this.$store.state.app.themeColor;
    },
  },
};
</script>

<style scoped></style>
