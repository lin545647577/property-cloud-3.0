<template>
  <div class="normalForm">
    <el-form
      v-loading="loading"
      label-position="right"
      label-width="150px"
      :model="form"
      :rules="rules"
      ref="ruleForm"
    >
      <el-form-item label="标题：" prop="workGuideName">
        <el-input v-model="form.workGuideName" :disabled="checkInfo"></el-input>
      </el-form-item>

      <el-form-item label="发布人：">
        <el-input
          v-model="form.workGuidePerson"
          :disabled="checkInfo"
        ></el-input>
      </el-form-item>

      <el-form-item label="分类：">
        <el-select
          v-model="form.type"
          placeholder="请选择"
          style="width: 100%"
          :disabled="checkInfo"
        >
          <el-option
            v-for="item in type"
            :key="item.id"
            :label="item.name"
            :value="item.id"
          ></el-option>
        </el-select>
      </el-form-item>
      <el-form-item label="状态：">
        <el-select
          v-model="form.status"
          placeholder="请选择"
          style="width: 100%"
          :disabled="checkInfo"
        >
          <el-option label="未发布" :value="0"></el-option>
          <el-option label="已发布" :value="1"></el-option>
        </el-select>
      </el-form-item>

      <el-form-item label="发布开始时间：" prop="publishStartTime">
        <el-date-picker
          v-model="form.publishStartTime"
          type="datetime"
          placeholder="选择日期时间"
          style="width: 100%"
        >
        </el-date-picker>
      </el-form-item>

      <el-form-item label="发布结束时间：">
        <el-date-picker
          v-model="form.publishEndTime"
          type="datetime"
          placeholder="选择日期时间"
          style="width: 100%"
        >
        </el-date-picker>
      </el-form-item>

      <el-form-item label="备注：">
        <el-input
          type="textarea"
          autosize
          :disabled="checkInfo"
          placeholder="请输入"
          v-model="form.remark"
        >
        </el-input>
      </el-form-item>
      <el-form-item label="内容：" prop="workGuideContent">
        <li-rich-text v-model="form.workGuideContent" />
      </el-form-item>

      <el-form-item label="附件：">
        <li-attachment v-model="form.urls" :readonly="checkInfo" />
      </el-form-item>
    </el-form>
    <div class="modal-btn">
      <el-button size="small" @click="hiddenModal">取消</el-button>
      <el-button
        size="small"
        type="primary"
        class="control-btn"
        :style="{ 'background-color': themeColor }"
        @click="submitForm('ruleForm')"
        >确认
      </el-button>
    </div>
    <li-modal ref="chooseModal" style="min-width: 1200px" />
  </div>
</template>
<script>
import { queryGuide, editGuide, insertGuide } from "@/api/order.js";
import { dateFormat } from "@/utils/util.js";

export default {
  name: "editModal",
  props: {
    params: {
      type: Object,
      required: true,
    },
  },
  data() {
    return {
      loading: false,
      checkInfo: false,
      form: {},
      rules: {
        publishStartTime: [
          {
            required: true,
            message: "请选择",
            trigger: "change",
          },
        ],
        workGuideName: [
          {
            required: true,
            message: "请输入",
            trigger: "blur",
          },
        ],
        workGuideContent: [
          {
            required: true,
            message: "请输入",
            trigger: "blur",
          },
        ],
      },
      type: [
        {
          id: 1,
          name: "业务办理指南",
        },
        {
          id: 2,
          name: "扶持政策申报指南",
        },
        {
          id: 3,
          name: "租赁手续办理指南",
        },
      ],
    };
  },
  methods: {
    hiddenModal() {
      // console.log(this.form)
      this.$emit("modal-cancel");
    },
    /**
     * 初始化
     * @param {String} id 楼层id
     */
    queryInfo(id) {
      this.loading = true;
      queryGuide(id).then((res) => {
        this.form = res;
        this.form.urls = typeof res.urls === "string" ? res.urls : "";
        this.loading = false;
        // this.form = {
        //   id: res.id,
        //   workGuideName: res.workGuideName,
        //   workGuideContent: res.workGuideContent,
        //   workGuidePerson: res.workGuidePerson,
        //   type: res.type,
        //   status: res.status,
        //   publishStartTime: res.publishStartTime,
        //   publishEndTime: res.publishEndTime,
        //   remark: res.remark,
        //   urls: typeof res.urls === "string" ? res.urls : "",
        // };
      });
    },

    submitForm(formName) {
      if (this.form.publishStartTime) {
        this.form.publishStartTime = dateFormat(
          "yyyy-MM-dd hh:mm:ss",
          new Date(this.form.publishStartTime)
        );
      }

      if (this.form.publishEndTime) {
        this.form.publishEndTime = dateFormat(
          "yyyy-MM-dd hh:mm:ss",
          new Date(this.form.publishEndTime)
        );
      }

      this.$refs[formName].validate((valid) => {
        if (valid) {
          if (!this.checkInfo) {
            if (this.form.id) {
              this.editInfo();
            } else {
              this.insertInfo();
            }
          } else {
            this.$emit("modal-submit");
          }
        } else {
          this.$message({
            message: "提交表单失败",
            center: true,
            type: "error",
          });
          return false;
        }
      });
    },
    insertInfo() {
      insertGuide(this.form).then((res) => {
        this.$message({
          message: "操作成功",
          center: true,
          type: "success",
        });
        this.$emit("modal-submit");
      });
    },
    editInfo() {
      editGuide(this.form).then((res) => {
        this.$message({
          message: "操作成功",
          center: true,
          type: "success",
        });
        this.$emit("modal-submit");
      });
    },
  },
  mounted() {
    this.checkInfo = this.params.checkInfo;
    if (this.params.id) {
      this.queryInfo(this.params.id);
    }
  },
  computed: {
    themeColor() {
      return this.$store.state.app.themeColor;
    },
  },
};
</script>

<style scoped></style>
